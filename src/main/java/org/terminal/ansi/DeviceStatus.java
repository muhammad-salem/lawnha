package org.terminal.ansi;

/**
 * The following codes are used for reporting terminal/display settings, 
 * and vary depending on the implementation
 * @author salem
 *
 */
public interface DeviceStatus {
	
	/**
	 * Requests a Report Device Code response from the device.
	 */
	String QueryDeviceCode = "\u001B[c";

	/**
	 * The ReportDeviceCode is Generated by the device in response 
	 * to Query Device Code request.
	 * 
	 * @param code to create code similar to  the one gnerated by the device.
	 * @return
	 */
    default String ReportDeviceCode(int code){return  "\u001B["+code+"0c";}
    /**
     * extract the code from a ReportDeviceCode 
     * @param report is the 'ReportDeviceCode' to be extracted
     * @return the code as string format
     */
    default String getReportDeviceCodeStr(String report){
        return report.substring(2, report.indexOf("0c"));
    }
    /**
     * extract the code from a ReportDeviceCode 
     * @param report is the 'ReportDeviceCode' to be extracted
     * @return the code as integer format
     */
    default int getReportDeviceCode(String report){
        return Integer.parseInt(getReportDeviceCodeStr(report));
    }
    
    /**
     * Requests a Report Device Status response from the device.
     */
    String QueryDeviceStatus = "\u001B[5n";
    
    /**
     * Generated by the device in response to a Query Device Status request; indicates that device is functioning correctly.
     */
    String ReportDeviceOK = "\u001B[0n";
    
    /**
     * Generated by the device in response to a Query Device Status request; indicates that device is functioning improperly.
     */
    String ReportDeviceFailure = "\u001B[3n";

    /**
     * Requests a Report Cursor Position response from the device.
     */
    String QueryCursorPosition = "\u001B[6n";  

    /**
     * The ReportCursorPosition is generated by the device in response to a Query Cursor Position request; 
     * reports current cursor position.
     * @param row		the number of x
     * @param column	the number of y
     * @return a generated report like the created by the device
     */
    default String ReportCursorPosition(int row, int column){return "\u001B["+row+';'+column+'R';} //
    /**
     * extract a the Cursor Position from <code>ReportCursorPosition</code> 
     * 
     * @param report the ReportCursorPosition that generated by the device
     * @return an array of length 2 contain row and column 
     */
    default int[] extractReportCursorPosition(String report){
        int[] pos = new int[2];
        String row = report.substring(2, report.indexOf(';'));
        String column = report.substring( report.indexOf(';')+1, report.indexOf('R'));
        pos[0] = Integer.parseInt(row);
        pos[1] = Integer.parseInt(column);
        return pos;
    }
}
